<Window x:Class="BartenderWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BartenderWindow"
        mc:Ignorable="d"
        Title="{Binding DisplayTitle}" Height="800" Width="1090" Background="{DynamicResource PurpleBackgroundBrush}" MinWidth="1090" MinHeight="800" Closing="Window_Closing">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="100"/>
            <RowDefinition MinHeight="50"/>
        </Grid.RowDefinitions>
        <DockPanel LastChildFill="False" Grid.RowSpan="2">
            <Menu x:Name="mainMenu" DockPanel.Dock="Top" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                <MenuItem Header="_File">
                    <MenuItem x:Name="loadMenuItme" Header="Load" Click="loadMenuItme_Click" ToolTip="Load parameters/settings from .xml file"/>
                    <MenuItem x:Name="saveMenuItem" Header="Save" Click="SaveMenuItem_Click" ToolTip="Save parameters/settings to .xml file"/>
                    <MenuItem x:Name="saveAsMenuItem" Header="Save As..." Click="SaveAsMenuItem_Click" ToolTip="Save parameters/settings to .xml file with new filename"/>
                    <Separator />
                    <MenuItem x:Name="inputDirMenuItme" Header="InputDir" Click="inputDirMenuItme_Click" ToolTip="Select directory for input files."/>
                    <MenuItem x:Name="outputDirMenuItme" Header="OutputDir" Click="outputDirMenuItme_Click" ToolTip="Select directory for output files."/>
                    <MenuItem x:Name="forFastqMenuItme" Header="F-Fastq" Click="forFastqMenuItme_Click" ToolTip="Select fastq file with forward reads."/>
                    <MenuItem x:Name="revFastqMenuItme" Header="R-Fastq" Click="revFastqMenuItme_Click" ToolTip="Select fastq file with reverse reads."/>
                    <Separator />
                    <MenuItem x:Name="exitMenuItem" Header="Exit" Click="ExitMenuItem_Click" />
                </MenuItem>

            </Menu>
            <ToolBarTray DockPanel.Dock="Top" Background="{DynamicResource ToolBarTrayBackground}">
                <ToolBar x:Name="mainToolBar" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="10,0,10,0">
                    <Button x:Name="reverseComplementButton" Content="Copy Reverse Complement" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Copy Reverse Complement sequence to Reverse Read Sequence box" Click="reverseComplementButton_Click" Margin="5,0,5,0"/>
                    <Button x:Name="analyzeButton" Content="Analyze Sequences" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Analyze and annotate the Forward Read and Reverse Read sequences" Margin="5,0,5,0" Click="analyzeButton_Click"/>
                    <Button x:Name="analyzeMultiButton" Content="Analyze Multi-Tags" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Analyze Forward Read and Reverse Mulltiplexing Tags" Margin="5,0,5,0" Click="analyzeMultiButton_Click"/>
                    <Button x:Name="autoRegexButton" Content="Auto Regex" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Automatically generate Lineage Tag RegEx's" Margin="5,0,5,0" Click="autoRegexButton_Click"/>
                    <Button x:Name="parseButton" Content="Parse" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Run Barcode Parser" Margin="5,0,5,0" Click="parseButton_Click"/>
                    <Button x:Name="clusterButton" Content="Cluster" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Run Barcode Clustering" Margin="5,0,5,0" Click="clusterButton_Click"/>
                    <Button x:Name="parseAndClusterButton" Content="Parse and Cluster" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Parse Barcodes then run Barcode Clustering" Margin="5,0,5,0" Click="parseAndClusterButton_Click"/>
                    <Button x:Name="MergeLengthsButton" Content="Merge Lengths" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Merge different length barcode cluster centers" Margin="5,0,5,0" Click="MergeLengthsButton_Click"/>
                    <Button x:Name="sortButton" Content="Sort" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Sort Barcodes by Sample ID and Correct for PCR Jackpotting" Margin="5,0,5,0" Click="sortButton_Click"/>
                    <Button x:Name="thresholdButton" Content="Trim Sorted BCs" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Threshold sorted barcodes and save to new file" Margin="5,0,5,0" Click="thresholdButton_Click"/>
                </ToolBar>
            </ToolBarTray>
            <Grid/>
        </DockPanel>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Input Directory:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Directory containing input (gzipped fastq) files." Height="16"/>
            <TextBox Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="115,0,10,0" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Text="{Binding InputDirectory, Mode=TwoWay}" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Foreground="{DynamicResource ReadOnlyForeground}"/>
            <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Output Directory:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Directory to save output files from barcode parsing." Height="16" Grid.Row="1"/>
            <TextBox Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="115,0,10,0" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Text="{Binding OutputDirectory, Mode=TwoWay}" Grid.Row="1" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Foreground="{DynamicResource ReadOnlyForeground}"/>
            <TextBlock HorizontalAlignment="Left" Margin="82,0,0,0" Text="Output File Label:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Text to include at beginning of all output filenames" Height="16" Grid.Row="2"/>
            <TextBox x:Name="outFileLabelTextBox" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="180,0,10,0" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Text="{Binding OutputFileLabel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" IsReadOnly="False"/>
            <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Forward Fastq files:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Comma separated list of gzipped fastq file containing forward reads." Height="16" Grid.Column="1" Grid.RowSpan="2"/>
            <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Reverse Fastq files:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Comma separated list of gzipped fastq file containing reverse reads." Height="16" Grid.Column="1" Grid.Row="2" Grid.RowSpan="2"/>
            <TextBox x:Name="forFastqTextBox" Height="40" TextWrapping="Wrap" VerticalAlignment="Center" Margin="115,0,10,0" FontFamily="Courier New" HorizontalContentAlignment="Left"  VerticalContentAlignment="Center" Text="{Binding ForwardGzFastQ, Mode=TwoWay}" Grid.Column="1" IsReadOnly="False" Grid.RowSpan="2" VerticalScrollBarVisibility="Auto"/>
            <TextBox x:Name="revFastqTextBox" Height="40" TextWrapping="Wrap" VerticalAlignment="Center" Margin="115,0,10,0" FontFamily="Courier New" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Text="{Binding ReverseGzFastQ, Mode=TwoWay}" Grid.Row="2" Grid.Column="1" IsReadOnly="False" Grid.RowSpan="2" VerticalScrollBarVisibility="Auto"/>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="16"/>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="80"/>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="80"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Left" Text="Read Length:" VerticalAlignment="Center" Foreground="White" Grid.Row="0" Margin="250,0,0,0" Grid.RowSpan="2"/>
                <TextBox x:Name="readLengthTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="60" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="readLengthTextBox_KeyUp" Margin="325,0,0,0" Grid.RowSpan="2">
                    <TextBox.Text>
                        <Binding Path="ReadLengthStr" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:RegexValidationRule x:Name="readLengthRegexRule" RegexText = "^[0-9]+$" ErrorMessage="Read length must be an integer." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock HorizontalAlignment="Left" Text="Max Sequences to Parse:" VerticalAlignment="Center" Foreground="White" Grid.Row="0" Margin="400,0,0,0" Grid.RowSpan="2" ToolTip="Maximum number of sequences to read from g-zipped fastq files. Set to zero to read the entire files."/>
                <TextBox x:Name="maxParseTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="150" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="readLengthTextBox_KeyUp" Margin="535,0,0,0" Grid.RowSpan="2">
                    <TextBox.Text>
                        <Binding Path="MaxParseStr" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:RegexValidationRule RegexText = "^[0-9]+$" ErrorMessage="Max sequences to parse must be an integer." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <RichTextBox x:Name="forwardRichTextBox" Margin="10,0,10,5" FontFamily="Courier New" Grid.Row="2" FontSize="14" TextChanged="forwardRichTextBox_TextChanged">
                    <FlowDocument>
                        <Paragraph>
                            <Run Text="Enter Forward Read Sequence here."/>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox>
                <RichTextBox x:Name="reverseRichTextBox" Margin="10,0,10,5" FontFamily="Courier New" Grid.Row="4" FontSize="14" TextChanged="reverseRichTextBox_TextChanged">
                    <FlowDocument>
                        <Paragraph>
                            <Run Text="Enter Reverse Read Sequence here, or use the 'Copy Reverse Complement' button."/>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Forward Read Sequence:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Use 'Z' for UMI tag bases, 'X' for sample multiplex tag bases, and 'N' for random bases in lineage tags." Height="16" Width="130" Grid.Row="1"/>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Reverse Read Sequence:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" Grid.Row="3" ToolTip="Use 'Z' for UMI tag bases, 'X' for sample multiplex tag bases, and 'N' for random bases in lineage tags." Height="16" Width="128"/>
                <Grid Grid.Row="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="18"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Parsing threads:" VerticalAlignment="Center" Foreground="White" Grid.Row="1" ToolTip="Number of processor threads to use for parsing input fastq files"/>
                    <TextBox x:Name="parsingThreadsTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="40" Margin="100,0,0,0" Grid.Row="1" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="forUmiTagLenTextBox_KeyUp">
                        <TextBox.Text>
                            <Binding Path="ParsingThreadsStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule x:Name="parsingThreadsRegexRule" RegexText = "^[0-9]+$" ErrorMessage="Number of parsing threads must be an integer." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="UMI tag lengths:" VerticalAlignment="Bottom" Foreground="White" Grid.Row="2"/>
                    <TextBlock HorizontalAlignment="Left" Margin="30,0,0,0" Text="Forward:" VerticalAlignment="Center" Foreground="White" Grid.Row="3"/>
                    <TextBox x:Name="forUmiTagLenTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="50" Margin="80,0,0,0" Grid.Row="3" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="forUmiTagLenTextBox_KeyUp">
                        <TextBox.Text>
                            <Binding Path="ForUmiTagLenStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule x:Name="forUmiRegexRule" RegexText = "^[0-9]{1,2}$|^[0-9]{1,2}-[0-9]{1,2}$|^$" ErrorMessage="UMI tag length must be an integer or range of integers." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock HorizontalAlignment="Left" Margin="30,0,0,0" Text="Reverse:" VerticalAlignment="Center" Foreground="White" Grid.Row="4"/>
                    <TextBox x:Name="revUmiTagLenTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="50" Margin="80,0,0,0" Grid.Row="4" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="revUmiTagLenTextBox_KeyUp">
                        <TextBox.Text>
                            <Binding Path="RevUmiTagLenStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule x:Name="revUmiRegexRule" RegexText = "^[0-9]{1,2}$|^[0-9]{1,2}-[0-9]{1,2}$|^$" ErrorMessage="UMI tag length must be an integer or range of integers." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Lineage tag Regex:" VerticalAlignment="Center" Foreground="White" Grid.Column="1"/>
                    <TextBlock HorizontalAlignment="Left" Margin="30,0,0,0" Text="Forward:" VerticalAlignment="Center" Foreground="White" Grid.Row="1" Grid.Column="1" Grid.RowSpan="2"/>
                    <TextBox x:Name="forRegExTextBox" HorizontalAlignment="Stretch" Height="40" TextWrapping="Wrap"  VerticalAlignment="Center" Margin="80,0,10,0" Grid.Row="1" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="forRegExTextBox_KeyUp" Grid.Column="1" Text="{Binding ForLintagRegexStr, Mode=TwoWay}" Grid.RowSpan="2"/>
                    <TextBlock HorizontalAlignment="Left" Margin="30,0,0,0" Text="Reverse:" VerticalAlignment="Center" Foreground="White" Grid.Row="3" Grid.Column="1" Grid.RowSpan="2"/>
                    <TextBox x:Name="revRegExTextBox" HorizontalAlignment="Stretch" Height="40" TextWrapping="Wrap" VerticalAlignment="Center" Margin="80,0,10,0" Grid.Row="3" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="revRegExTextBox_KeyUp" Grid.Column="1" Text="{Binding RevLintagRegexStr, Mode=TwoWay}" Grid.RowSpan="2"/>

                </Grid>
                <Grid Grid.Row="6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="218"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="230"/>
                        <ColumnDefinition Width="240"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Border BorderThickness="1" BorderBrush="White" Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="157"/>
                                <ColumnDefinition Width="148"/>
                                <ColumnDefinition Width="163"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock HorizontalAlignment="Left" Text="Auto RegEx Settings:" VerticalAlignment="Top" Foreground="White" Margin="10,0,0,0" Height="15" Width="109"/>
                            <CheckBox x:Name="ignoreSingleConstCheckBox" Content="Ignore single constants" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" ToolTip="Treat single constant bases as N's for Auto-RegEx" IsChecked="{Binding IgnoreSingleConst}" Height="16" Width="142" Grid.Row="1" Margin="10,0,0,0"/>
                            <TextBlock HorizontalAlignment="Left" Text="Deletion Rate (%):" VerticalAlignment="Center" Foreground="White" Height="16" ToolTip="Allowance for shorter repeated N's" Margin="10,0,0,0" Width="95" Grid.Column="1"/>
                            <TextBox x:Name="regexDelRateTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="30" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="112,0,0,0" Grid.Column="1">
                                <TextBox.Text>
                                    <Binding Path="RegexDelRateStr" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:RegexValidationRule RegexText = "^[0-9]{1,2}$" ErrorMessage="Deletion rate must be an integer between 0 and 99." ValidationOptions="None"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock HorizontalAlignment="Left" Text="Insertion Rate (%):" VerticalAlignment="Center" Foreground="White"  Grid.Row="1" Margin="10,0,0,0" Grid.Column="1" Height="16" ToolTip="Allowance for longer repeated N's" Width="96"/>
                            <TextBox x:Name="regexInsRateTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="30" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="112,0,0,0" Grid.Row="1" Grid.Column="1">
                                <TextBox.Text>
                                    <Binding Path="RegexInsRateStr" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:RegexValidationRule RegexText = "^[0-9]{1,2}$" ErrorMessage="Insertion rate must be an integer between 0 and 99." ValidationOptions="None"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock HorizontalAlignment="Left" Text="Lin-Tag Flank Errors:" VerticalAlignment="Center" Foreground="White"  Grid.Row="1" Margin="10,0,0,0" Grid.Column="2" Height="16" ToolTip="Allowed number of mismatches in lineage tag flanking sequences (0 or 1)."/>
                            <TextBox x:Name="linTagFlankErrTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="30" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="120,0,0,0" Grid.Row="1" Grid.Column="2">
                                <TextBox.Text>
                                    <Binding Path="LinTagFlankErrStr" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:RegexValidationRule RegexText = "^(0|1)$" ErrorMessage="Allowed lin-tag flank sequence error must be zero or one." ValidationOptions="None"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Lin-Tag Flank Length:" VerticalAlignment="Center" Foreground="White" ToolTip="Length of sequence before and after lineage tags used for sequence matching" Height="15" Width="153" Grid.Column="2"/>
                            <TextBox x:Name="linTagFlankLengthTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="30" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="128,0,0,0" Grid.Column="2">
                                <TextBox.Text>
                                    <Binding Path="LinTagFlankLengthStr" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <local:RegexValidationRule RegexText = "^[0-9]+$" ErrorMessage="Flanking length must be an integer." ValidationOptions="None"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </Grid>
                    </Border>
                    <TextBlock HorizontalAlignment="Left" Text="Multiplex Tag Flanking Length:" VerticalAlignment="Center" Foreground="White" ToolTip="Length of sequence after multiplexing tags used for sequence matching" Grid.Row="1" Margin="10,0,0,0" Height="15" Width="161"/>
                    <TextBox x:Name="multiFlankLengthTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="30" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="175,0,0,0" Grid.Row="1">
                        <TextBox.Text>
                            <Binding Path="MultiFlankLengthStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule RegexText = "^[0-9]+$" ErrorMessage="Flanking length must be an integer." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock HorizontalAlignment="Left" Text="Multiplex Tag Flank Errors:" VerticalAlignment="Center" Foreground="White"  Grid.Row="2" Margin="10,0,0,0" Height="16" ToolTip="Allowed number of mismatches in multiplexing tag flanking sequence (0 or 1)."/>
                    <TextBox x:Name="multiTagFlankErrTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="30" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="160,0,0,0" Grid.Row="2">
                        <TextBox.Text>
                            <Binding Path="MultiTagFlankErrStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule RegexText = "^(0|1)$" ErrorMessage="Allowed multi-tag flank sequence error must be zero or one." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBlock HorizontalAlignment="Left" Text="Forward Lin-Tag Length:" VerticalAlignment="Center" Foreground="White" ToolTip="Length of lineage tags on forward reads" Grid.Row="4" Margin="30,0,0,0" Grid.Column="1" Height="15" Grid.ColumnSpan="2"/>
                    <TextBox HorizontalAlignment="Left" Margin="160,0,0,0" Grid.Row="4" VerticalAlignment="Center" Text="{Binding ForwardLinTagLengthStr, Mode=TwoWay}" AcceptsReturn="False" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Height="20" Width="60" Grid.Column="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="{DynamicResource ReadOnlyForeground}" Grid.ColumnSpan="2"/>
                    <TextBlock HorizontalAlignment="Left" Text="Reverse Lin-Tag Length:" VerticalAlignment="Center" Foreground="White" ToolTip="Length of lineage tags on reverse reads" Grid.Row="4" Margin="10,0,0,0" Grid.Column="3" Height="15" Width="124"/>
                    <TextBox HorizontalAlignment="Left" Margin="139,0,0,0" Grid.Row="4" VerticalAlignment="Center" Text="{Binding ReverseLinTagLengthStr, Mode=TwoWay}" AcceptsReturn="False" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Height="20" Width="60" Grid.Column="3" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="{DynamicResource ReadOnlyForeground}"/>
                    <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Minimum Quality Score:" VerticalAlignment="Center" Foreground="White" ToolTip="The minimum avareage fastq quality score for acceptance of lineage tags" Grid.Row="4" Height="15"/>
                    <TextBox x:Name="minQualityTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="60" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="145,0,0,0" Grid.Row="4">
                        <TextBox.Text>
                            <Binding Path="MinQualityStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule RegexText = "^[0-9]+$|^[0-9]+.[0-9]{0,2}$" ErrorMessage="Minimum Quality Score must be a number." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock HorizontalAlignment="Left" Text="Forward Spacer Length:" VerticalAlignment="Center" Foreground="White" ToolTip="Length of constant sequence between multiplexing tags and lineage tags on forward reads" Grid.Row="5" Margin="10,0,0,0" Height="15" Width="124"/>
                    <TextBox HorizontalAlignment="Left" Margin="139,0,0,0" Grid.Row="5" VerticalAlignment="Center" Text="{Binding ForwardSpacerLengthStr, Mode=TwoWay}" AcceptsReturn="False" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Height="20" Width="60" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="{DynamicResource ReadOnlyForeground}"/>
                    <TextBlock HorizontalAlignment="Left" Text="Reverse Spacer Length:" VerticalAlignment="Center" Foreground="White" ToolTip="Length of constant sequence between multiplexing tags and lineage tags on forward reads" Grid.Row="5" Margin="210,0,0,0" Height="15" Width="122" Grid.ColumnSpan="3"/>
                    <TextBox HorizontalAlignment="Left" Margin="336,0,0,0" Grid.Row="5" VerticalAlignment="Center" Text="{Binding ReverseSpacerLengthStr, Mode=TwoWay}" AcceptsReturn="False" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Height="20" Width="60" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="{DynamicResource ReadOnlyForeground}" Grid.ColumnSpan="3"/>
                    <TextBlock HorizontalAlignment="Left" Text="Spacer Del Rate (%):" VerticalAlignment="Center" Foreground="White" ToolTip="Allowance for possible deletions in spacer sequences" Grid.Row="5" Margin="420,0,0,0" Height="15" Grid.ColumnSpan="4"/>
                    <TextBox x:Name="spacerDelRateTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="30" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="530,0,0,0" Grid.Row="5" Grid.ColumnSpan="4">
                        <TextBox.Text>
                            <Binding Path="SpacerDelRateStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule RegexText = "^[0-9]{1,2}$" ErrorMessage="Deletion rate must be an integer etween 0 and 99." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock HorizontalAlignment="Left" Text="Spacer Ins Rate (%):" VerticalAlignment="Center" Foreground="White" ToolTip="Allowance for possible insertions in spacer sequences" Grid.Row="5" Margin="575,0,0,0" Height="15" Grid.ColumnSpan="5"/>
                    <TextBox x:Name="spacerInsRateTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="30" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="685,0,0,0" Grid.Row="5" Grid.ColumnSpan="5">
                        <TextBox.Text>
                            <Binding Path="SpacerInsRateStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule RegexText = "^[0-9]{1,2}$" ErrorMessage="Insertion rate must be an integer etween 0 and 99." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="2.5*"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Left" Text="Multiplexing Tags:" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" ToolTip="Enter forward and reverse multiplexing tags to be automatically combined." Margin="10,0,0,0"/>
                <TextBlock HorizontalAlignment="Left" Text="Forward:" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" ToolTip="Enter forward multiplexing tags, one per line, and optionally include shorthand indentifier separated by a comma." Grid.Row="1" Margin="10,0,0,0"/>
                <TextBlock HorizontalAlignment="Left" Text="Reverse:" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" ToolTip="Enter reverse multiplexing tags, one per line, and optionally include shorthand indentifier separated by a comma." Grid.Row="1" Margin="10,0,0,0" Grid.Column="1"/>
                <TextBox x:Name="fowardMultiTagTextBox" Margin="10,0,10,10" Grid.Row="2" TextWrapping="NoWrap" FontFamily="Courier New" FontSize="14" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AcceptsReturn="True">
                    <TextBox.Text>
                        <Binding Path="FowardMultiTagText" UpdateSourceTrigger="PropertyChanged"  Mode="TwoWay">
                            <Binding.ValidationRules>
                                <local:MultiLineValidationRule RegexText = "^[AGCT]{5,50}$|^[AGCT]{5,50},[^_]*$" ErrorMessage="Each line must have the form: '{Tag sequence}, Short-ID'." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBox x:Name="reverseMultiTagTextBox" Margin="10,0,10,10" Grid.Row="2" TextWrapping="NoWrap" FontFamily="Courier New" FontSize="14" Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AcceptsReturn="True">
                    <TextBox.Text>
                        <Binding Path="ReverseMultiTagText" UpdateSourceTrigger="PropertyChanged"  Mode="TwoWay">
                            <Binding.ValidationRules>
                                <local:MultiLineValidationRule RegexText = "^[AGCT]{5,50}$|^[AGCT]{5,50},[^_]*$" ErrorMessage="Each line must have the form: '{Tag sequence}, Short-ID'." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock HorizontalAlignment="Left" Text="Extra Multiplexing Tags:" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" ToolTip="Enter extra multiplexing tags or tags that should not be automatically comined, one per line: 'Forward, Reverse, Short-ID'. The Short-IDs are optional." Margin="10,0,0,0" Grid.Row="3"/>
                <TextBox x:Name="extraMultiTagTextBox" Margin="10,0,10,10" Grid.Row="4" TextWrapping="NoWrap" FontFamily="Courier New" FontSize="14" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2" AcceptsReturn="True">
                    <TextBox.Text>
                        <Binding Path="ExtraMultiTagText" UpdateSourceTrigger="PropertyChanged"  Mode="TwoWay">
                            <Binding.ValidationRules>
                                <local:MultiLineValidationRule RegexText = "^[AGCT]{5,50}, [AGCT]{5,50}$|^[AGCT]{5,50}, [AGCT]{5,50},[^_]*$" ErrorMessage="Each line must have the form: '{F-Tag sequence}, {R-Tag sequence}, Short-ID'." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock HorizontalAlignment="Left" Text="Multi-tag Error Rate (%):" VerticalAlignment="Center" Foreground="White"  Grid.Row="5" Height="15" ToolTip="Allowance for errors in matching sequences to multiplexing tags" Margin="10,0,0,0"/>
                <TextBox x:Name="multiTagErrorRateTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="30" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="142,0,0,0" Grid.Row="5">
                    <TextBox.Text>
                        <Binding Path="MultiTagErrorRateStr" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:RegexValidationRule RegexText = "^[0-9]{1,2}$" ErrorMessage="Error rate must be an integer between 0 and 99." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <ComboBox x:Name="nWeightsComboBox" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="277,0,0,0" Grid.Row="5" VerticalAlignment="Center" Width="70" ItemsSource="{Binding NWeightsList}" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding NWeightStr, Mode=TwoWay}"/>
                <TextBlock HorizontalAlignment="Left" Text="'N' weighting:" VerticalAlignment="Center" Foreground="White"  Grid.Row="5" Height="15" ToolTip="Weighting to use for error calculation with 'N's in multi-tag sequences" Margin="200,0,0,0" Grid.ColumnSpan="2"/>
            </Grid>
        </Grid>
        <TextBox x:Name="outputTextBox" Margin="10,10,10,10" Grid.Row="5" TextWrapping="Wrap" Text="{Binding OutputText, Mode=TwoWay}" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" IsReadOnly="True" Background="#FF170D23" TextChanged="outputTextBox_TextChanged" Foreground="#FFCDCDCD" FontFamily="Courier New" FontSize="14"/>
        <Border BorderThickness="1" BorderBrush="White" Grid.Row="3" Margin="10,5,10,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition Width="212"/>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="270"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Barcode Clustering Parameters:" VerticalAlignment="Top" Foreground="White" ToolTip="Parameters/Controls for Barcode Clustering" Height="16" Grid.RowSpan="2"/>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Forward Input File:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Path to forward input file for clustering." Height="16" Grid.Column="2" Grid.Row="1"/>
                <TextBox x:Name="forClusterInputTextBox" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="115,0,10,0" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Text="{Binding ForClusterInputPath, Mode=TwoWay}" Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="3"/>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Reverse Input File:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Path to reverse input file for clustering." Height="16" Grid.Column="2" Grid.Row="2"/>
                <TextBox x:Name="revClusterInputTextBox" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="115,0,10,0" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Text="{Binding RevClusterInputPath, Mode=TwoWay}" Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="3"/>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Cutoff Frequency:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="All clusters with size less then this threshold will not be reported in the results." Height="16" Grid.Row="1" Grid.Column="1"/>
                <TextBox x:Name="clusterCutoffFreqTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="60" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="115,0,0,0" Grid.Row="1" Grid.Column="1">
                    <TextBox.Text>
                        <Binding Path="ClusterCutoffFrequencyStr" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:RegexValidationRule RegexText = "^[0-9]{1,4}$" ErrorMessage="Clustering Cutoff Frequency must be an integer between 0 and 9999." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Max Cluster Distance:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="If the distance between two cluster sequences is within this threshold, these two sequences will be merged if they pass the statistical test set by the cluster merging threshold." Height="16" Grid.Row="2"/>
                <TextBox x:Name="maxClusterDistTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="40" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="130,0,0,0" Grid.Row="2">
                    <TextBox.Text>
                        <Binding Path="MaxClusterDistanceStr" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:RegexValidationRule RegexText = "^[0-9]{1,2}$" ErrorMessage="Max Cluster Distance must be an integer between 0 and 99." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Cluster Merge Threshold (z):" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Higher threshold values result in more cluster merging (see the publication for a full description). This should be set according to the expected coverage per barcode and the barcode library complexity. For low to medium coverage (less than 500 reads/barcode), we recommend starting with the default setting (= 5). However, in some cases, it may be necessary to adjust the threshold higher to prevent over-merging (see publication). In cases where all barcodes are expected to be distant (an average of 5-6 mismatches from a nearest neighbor), we recommend disabling the merging threshold (set value to -1) to make merging decisions based on cluster distance only." Height="16" Grid.Row="2" Grid.Column="1"/>
                <TextBox x:Name="clusterMergeTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="40" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="163,0,0,0" Grid.Row="2" Grid.Column="1">
                    <TextBox.Text>
                        <Binding Path="ClusterMergeThresholdStr" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:RegexValidationRule RegexText = "^-?[0-9]+$|^-?[0-9]+.[0-9]{0,2}$" ErrorMessage="Cluster Merge Threshold must be a number." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Cluster Seed Length:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="The possible values range from 3 to 8, with a default of 5 (recommended). The larger this value, the faster the program will run. In some cases with high sequence error rates, a higher setting will result in under-merging." Height="16" Grid.Row="3"/>
                <TextBox x:Name="clusterSeedLenTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="40" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="130,0,0,0" Grid.Row="3">
                    <TextBox.Text>
                        <Binding Path="ClusterSeedLengthStr" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:RegexValidationRule RegexText = "^[3-8]$" ErrorMessage="Cluster Seed Length must be an integer between 3 and 8." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Cluster Seed Step:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="The number of non-overlapping positions between two adjacent seeds. The default value is 1 (recommended). For example, using seed length = 5 and seed step = 2, will result in adjacent seeds that have 2 unique positions and 3 positions in common. If the step value is equal to or larger than the seed length, then there will be no overlap between seeds." Height="16" Grid.Row="3" Grid.Column="1"/>
                <TextBox x:Name="clusterSeedStepTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="40" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="115,0,0,0" Grid.Row="3" Grid.Column="1">
                    <TextBox.Text>
                        <Binding Path="ClusterSeedStepStr" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:RegexValidationRule RegexText = "^[1-8]$" ErrorMessage="Cluster Seed Step must be an integer between 1 and 8." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="In-Del Probability:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Comma separated list of insertion-deletion probabilities used for decisions about merging different length barcode clusters. The list should have an entry for each Levenschtein distance (e.g. 1, 2...) fow which merges will be allowed. Each entry is the estimated probability of read errors with the corresponding Levenschtein distance." Height="16" Grid.Row="4" Grid.Column="1"/>
                <TextBox x:Name="inDelProbTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="230" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Left"  VerticalContentAlignment="Center" Margin="115,0,0,0" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2">
                    <TextBox.Text>
                        <Binding Path="InDelProbStr" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:RegexValidationRule RegexText = "^(0\.[0-9]+,)*0\.[0-9]+$" ErrorMessage="In-Del probability should be a list of comma separated numbers." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <CheckBox x:Name="autoMergeSubstringsCheckBox" Content="Auto-merge substrings" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" ToolTip="Automatically merge barcodes that are substrings" IsChecked="{Binding AutoMergeSubstrings}" Height="16" Width="142" Grid.Row="4" Margin="10,0,0,0" Grid.Column="3"/>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Sorted Barcode Cutoff Frequency:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Threshold for trimming barcodes after sorting." Height="16" Grid.Row="3" Grid.Column="3"/>
                <TextBox x:Name="sortedBarcodeThresholdTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="60" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="195,0,0,0" Grid.Row="3" Grid.Column="3">
                    <TextBox.Text>
                        <Binding Path="SortedBarcodeThresholdStr" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:RegexValidationRule RegexText = "^[0-9]{1,4}$" ErrorMessage="Sorted Barcode Cutoff Frequency must be an integer between 0 and 9999." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Button x:Name="clusterDefaultButton" Content="Use Default Settings" HorizontalAlignment="Left" Margin="20,0,0,0" Grid.Row="4" VerticalAlignment="Center" Width="120" Height="20" Click="clusterDefaultButton_Click"/>
            </Grid>
        </Border>


    </Grid>
</Window>
