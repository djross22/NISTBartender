<Window x:Class="BartenderWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BartenderWindow"
        mc:Ignorable="d"
        Title="{Binding DisplayTitle}" Height="600" Width="900" Background="{DynamicResource PurpleBackgroundBrush}" MinWidth="900" MinHeight="600" Closing="Window_Closing">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="3*"/>
        </Grid.RowDefinitions>
        <DockPanel LastChildFill="False" Grid.RowSpan="2">
            <Menu x:Name="mainMenu" DockPanel.Dock="Top" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                <MenuItem Header="_File">
                    <MenuItem x:Name="loadMenuItme" Header="Load" Click="loadMenuItme_Click" ToolTip="Load parameters/settings from .xml file"/>
                    <MenuItem x:Name="saveMenuItem" Header="Save" Click="SaveMenuItem_Click" ToolTip="Save parameters/settings to .xml file"/>
                    <MenuItem x:Name="saveAsMenuItem" Header="Save As..." Click="SaveAsMenuItem_Click" ToolTip="Save parameters/settings to .xml file with new filename"/>
                    <Separator />
                    <MenuItem x:Name="inputDirMenuItme" Header="InputDir" Click="inputDirMenuItme_Click" ToolTip="Select directory for input files."/>
                    <MenuItem x:Name="outputDirMenuItme" Header="OutputDir" Click="outputDirMenuItme_Click" ToolTip="Select directory for output files."/>
                    <MenuItem x:Name="forFastqMenuItme" Header="F-Fastq" Click="forFastqMenuItme_Click" ToolTip="Select fastq file with forward reads."/>
                    <MenuItem x:Name="revFastqMenuItme" Header="R-Fastq" Click="revFastqMenuItme_Click" ToolTip="Select fastq file with reverse reads."/>
                    <Separator />
                    <MenuItem x:Name="exitMenuItem" Header="Exit" Click="ExitMenuItem_Click" />
                </MenuItem>

            </Menu>
            <ToolBarTray DockPanel.Dock="Top" Background="{DynamicResource ToolBarTrayBackground}">
                <ToolBar VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="10,0,10,0">
                    <Button x:Name="reverseComplementButton" Content="Copy Reverse Complement" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Copy Reverse Complement sequence to Reverse Read Sequence box" Click="reverseComplementButton_Click" Margin="5,0,5,0"/>
                    <Button x:Name="analyzeButton" Content="Analyze Sequences" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Analyze and annotate the Forward Read and Reverse Read sequences" Margin="5,0,5,0" Click="analyzeButton_Click"/>
                    <Button x:Name="autoRegexButton" Content="Auto Regex" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ToolTip="Automatically generate Lineage Tag RegEx's" Margin="5,0,5,0" Click="autoRegexButton_Click"/>
                </ToolBar>
            </ToolBarTray>
            <Grid/>
        </DockPanel>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Input Directory:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Directory containing input (gzipped fastq) files." Height="16"/>
            <TextBox Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="115,0,10,0" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Text="{Binding InputDirectory, Mode=TwoWay}" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Foreground="{DynamicResource ReadOnlyForeground}"/>
            <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Output Directory:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Directory to save output files." Height="16" Grid.Row="1"/>
            <TextBox Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="115,0,10,0" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Text="{Binding OutputDirectory, Mode=TwoWay}" Grid.Row="1" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Foreground="{DynamicResource ReadOnlyForeground}"/>
            <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Forward Fastq file:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Gzipped fastq file containing forward reads." Height="16" Grid.Column="1"/>
            <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Reverse Fastq file:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Gzipped fastq file containing reverse reads." Height="16" Grid.Column="1" Grid.Row="1"/>
            <TextBox Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="115,0,10,0" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Left"  VerticalContentAlignment="Center" Text="{Binding ForwardGzFastQ, Mode=TwoWay}" Grid.Column="1" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Foreground="{DynamicResource ReadOnlyForeground}"/>
            <TextBox Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="115,0,10,0" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Text="{Binding ReverseGzFastQ, Mode=TwoWay}" Grid.Row="1" Grid.Column="1" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Foreground="{DynamicResource ReadOnlyForeground}"/>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="16"/>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="18"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="70"/>
                    <RowDefinition Height="80"/>
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Right" Text="Read Length:" VerticalAlignment="Center" Foreground="White" Grid.Row="0" Margin="0,0,125,0" Grid.RowSpan="2"/>
                <TextBox x:Name="readLengthTextBox" HorizontalAlignment="Right" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="60" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="readLengthTextBox_KeyUp" Margin="0,0,60,0" Grid.RowSpan="2">
                    <TextBox.Text>
                        <Binding Path="ReadLengthStr" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:RegexValidationRule x:Name="readLengthRegexRule" RegexText = "^[0-9]+$" ErrorMessage="Read length must be an integer." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <RichTextBox x:Name="forwardRichTextBox" Margin="10,0,10,5" FontFamily="Courier New" Grid.Row="2" FontSize="14">
                    <FlowDocument>
                        <Paragraph>
                            <Run Text="Enter Forward Read Sequence here."/>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox>
                <RichTextBox x:Name="reverseRichTextBox" Margin="10,0,10,5" FontFamily="Courier New" Grid.Row="4" FontSize="14">
                    <FlowDocument>
                        <Paragraph>
                            <Run Text="Enter Reverse Read Sequence here, or use the 'Copy Reverse Complement' button."/>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Forward Read Sequence:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" ToolTip="Use 'Z' for UMI tag bases, 'X' for sample multiplex tag bases, and 'N' for random bases in lineage tags." Height="16" Width="130" Grid.Row="1"/>
                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Reverse Read Sequence:" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="White" Grid.Row="3" ToolTip="Use 'Z' for UMI tag bases, 'X' for sample multiplex tag bases, and 'N' for random bases in lineage tags." Height="16" Width="128"/>
                <Grid Grid.Row="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="18"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="UMI tag lengths:" VerticalAlignment="Center" Foreground="White"/>
                    <TextBlock HorizontalAlignment="Left" Margin="30,0,0,0" Text="Forward:" VerticalAlignment="Center" Foreground="White" Grid.Row="1"/>
                    <TextBox x:Name="forUmiTagLenTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="50" Margin="80,0,0,0" Grid.Row="1" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="forUmiTagLenTextBox_KeyUp">
                        <TextBox.Text>
                            <Binding Path="ForUmiTagLenStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule x:Name="forUmiRegexRule" RegexText = "^[0-9]{1,2}$|^[0-9]{1,2}-[0-9]{1,2}$|^$" ErrorMessage="UMI tag length must be an integer or range of integers." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock HorizontalAlignment="Left" Margin="30,0,0,0" Text="Reverse:" VerticalAlignment="Center" Foreground="White" Grid.Row="2"/>
                    <TextBox x:Name="revUmiTagLenTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="50" Margin="80,0,0,0" Grid.Row="2" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="revUmiTagLenTextBox_KeyUp">
                        <TextBox.Text>
                            <Binding Path="RevUmiTagLenStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule x:Name="revUmiRegexRule" RegexText = "^[0-9]{1,2}$|^[0-9]{1,2}-[0-9]{1,2}$|^$" ErrorMessage="UMI tag length must be an integer or range of integers." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Lineage tag Regex:" VerticalAlignment="Center" Foreground="White" Grid.Column="1"/>
                    <TextBlock HorizontalAlignment="Left" Margin="30,0,0,0" Text="Forward:" VerticalAlignment="Center" Foreground="White" Grid.Row="1" Grid.Column="1"/>
                    <TextBox x:Name="forRegExTextBox" HorizontalAlignment="Stretch" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="80,0,10,0" Grid.Row="1" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="forRegExTextBox_KeyUp" Grid.Column="1" Text="{Binding ForLintagRegexStr, Mode=TwoWay}"/>
                    <TextBlock HorizontalAlignment="Left" Margin="30,0,0,0" Text="Reverse:" VerticalAlignment="Center" Foreground="White" Grid.Row="2" Grid.Column="1"/>
                    <TextBox x:Name="revRegExTextBox" HorizontalAlignment="Stretch" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Margin="80,0,10,0" Grid.Row="2" FontFamily="Courier New" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="revRegExTextBox_KeyUp" Grid.Column="1" Text="{Binding RevLintagRegexStr, Mode=TwoWay}"/>

                </Grid>
                <Grid Grid.Row="6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="218*"/>
                        <ColumnDefinition Width="187*"/>
                        <ColumnDefinition Width="195*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock HorizontalAlignment="Left" Text="Multiplex Tag Flanking Length:" VerticalAlignment="Center" Foreground="White" ToolTip="Length of sequence after multiplexing tags used for sequence matching" Grid.Row="1" Margin="10,0,0,0" Height="15" Width="161"/>
                    <TextBox x:Name="multiFlankLengthTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="30" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="175,0,0,0" Grid.Row="1">
                        <TextBox.Text>
                            <Binding Path="MultiFlankLengthStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule RegexText = "^[0-9]+$" ErrorMessage="Flanking length must be an integer." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Lineage Tag Flanking Length:" VerticalAlignment="Center" Foreground="White" ToolTip="Length of sequence before and after lineage tags used for sequence matching" Grid.Row="2" Height="15" Width="153"/>
                    <TextBox x:Name="linTagFlankLengthTextBox" HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="30" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="167,0,0,0" Grid.Row="2">
                        <TextBox.Text>
                            <Binding Path="LinTagFlankLengthStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule RegexText = "^[0-9]+$" ErrorMessage="Flanking length must be an integer." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock HorizontalAlignment="Left" Text="Forward Spacer Length:" VerticalAlignment="Center" Foreground="White" ToolTip="Length of constant sequence between multiplexing tags and lineage tags on forward reads" Grid.Row="1" Margin="10,0,0,0" Grid.Column="1" Height="15" Width="124"/>
                    <TextBox HorizontalAlignment="Left" Margin="139,0,0,0" Grid.Row="1" VerticalAlignment="Center" Text="{Binding ForwardSpacerLengthStr, Mode=TwoWay}" AcceptsReturn="False" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Height="20" Width="30" Grid.Column="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="{DynamicResource ReadOnlyForeground}"/>
                    <TextBlock HorizontalAlignment="Left" Text="Reverse Spacer Length:" VerticalAlignment="Center" Foreground="White" ToolTip="Length of constant sequence between multiplexing tags and lineage tags on forward reads" Grid.Row="2" Margin="10,0,0,0" Grid.Column="1" Height="15" Width="122"/>
                    <TextBox HorizontalAlignment="Left" Margin="139,0,0,0" Grid.Row="2" VerticalAlignment="Center" Text="{Binding ReverseSpacerLengthStr, Mode=TwoWay}" AcceptsReturn="False" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Height="20" Width="30" Grid.Column="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="{DynamicResource ReadOnlyForeground}"/>
                    <TextBlock HorizontalAlignment="Left" Text="Forward Lin-Tag Length:" VerticalAlignment="Center" Foreground="White" ToolTip="Length of lineage tags on forward reads" Grid.Row="1" Margin="10,0,0,0" Grid.Column="2" Height="15" Width="124"/>
                    <TextBox HorizontalAlignment="Left" Margin="139,0,0,0" Grid.Row="1" VerticalAlignment="Center" Text="{Binding ForwardLinTagLengthStr, Mode=TwoWay}" AcceptsReturn="False" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Height="20" Width="30" Grid.Column="2" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="{DynamicResource ReadOnlyForeground}"/>
                    <TextBlock HorizontalAlignment="Left" Text="Reverse Lin-Tag Length:" VerticalAlignment="Center" Foreground="White" ToolTip="Length of lineage tags on reverse reads" Grid.Row="2" Margin="10,0,0,0" Grid.Column="2" Height="15" Width="124"/>
                    <TextBox HorizontalAlignment="Left" Margin="139,0,0,0" Grid.Row="2" VerticalAlignment="Center" Text="{Binding ReverseLinTagLengthStr, Mode=TwoWay}" AcceptsReturn="False" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" Height="20" Width="30" Grid.Column="2" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Foreground="{DynamicResource ReadOnlyForeground}"/>
                    <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" Text="Minimum Quality Score:" VerticalAlignment="Center" Foreground="White" ToolTip="The minimum avareage fastq quality score for acceptance of lineage tags" Grid.Row="3" Height="15"/>
                    <TextBox HorizontalAlignment="Left" Height="20" TextWrapping="NoWrap" VerticalAlignment="Center" Width="60" FontFamily="Courier New" FontSize="14" MaxLines="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="145,0,0,0" Grid.Row="3">
                        <TextBox.Text>
                            <Binding Path="MinQualityStr" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:RegexValidationRule RegexText = "^[0-9.]+$" ErrorMessage="Minimum Quality Score must be a number." ValidationOptions="None"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Left" Text="Multiplexing Tags:" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" ToolTip="Enter forward and reverse multiplexing tags to be automatically combined." Margin="10,0,0,0"/>
                <TextBlock HorizontalAlignment="Left" Text="Forward:" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" ToolTip="Enter forward multiplexing tags, one per line, and optionally include shorthand indentifier separated by a comma." Grid.Row="1" Margin="10,0,0,0"/>
                <TextBlock HorizontalAlignment="Left" Text="Reverse:" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" ToolTip="Enter reverse multiplexing tags, one per line, and optionally include shorthand indentifier separated by a comma." Grid.Row="1" Margin="10,0,0,0" Grid.Column="1"/>
                <TextBox x:Name="fowardMultiTagTextBox" Margin="10,0,10,10" Grid.Row="2" TextWrapping="NoWrap" FontFamily="Courier New" FontSize="14" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AcceptsReturn="True">
                    <TextBox.Text>
                        <Binding Path="FowardMultiTagText" UpdateSourceTrigger="PropertyChanged"  Mode="TwoWay">
                            <Binding.ValidationRules>
                                <local:MultiLineValidationRule RegexText = "^[AGCT]{5,20}$|^[AGCT]{5,20},.*$" ErrorMessage="Each line must have the form: '{Tag sequence}, Short-ID'." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBox x:Name="reverseMultiTagTextBox" Margin="10,0,10,10" Grid.Row="2" TextWrapping="NoWrap" FontFamily="Courier New" FontSize="14" Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AcceptsReturn="True">
                    <TextBox.Text>
                        <Binding Path="ReverseMultiTagText" UpdateSourceTrigger="PropertyChanged"  Mode="TwoWay">
                            <Binding.ValidationRules>
                                <local:MultiLineValidationRule RegexText = "^[AGCT]{5,20}$|^[AGCT]{5,20},.*$" ErrorMessage="Each line must have the form: '{Tag sequence}, Short-ID'." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock HorizontalAlignment="Left" Text="Extra Multiplexing Tags:" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="White" ToolTip="Enter extra multiplexing tags or tags that should not be automatically comined, one per line: 'Forward, Reverse, Short-ID'. The Short-IDs are optional." Margin="10,0,0,0" Grid.Row="3"/>
                <TextBox x:Name="extraMultiTagTextBox" Margin="10,0,10,10" Grid.Row="4" TextWrapping="NoWrap" FontFamily="Courier New" FontSize="14" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2" AcceptsReturn="True">
                    <TextBox.Text>
                        <Binding Path="ExtraMultiTagText" UpdateSourceTrigger="PropertyChanged"  Mode="TwoWay">
                            <Binding.ValidationRules>
                                <local:MultiLineValidationRule RegexText = "^[AGCT]{5,20}, [AGCT]{5,20}$|^[AGCT]{5,20}, [AGCT]{5,20},.*$" ErrorMessage="Each line must have the form: '{F-Tag sequence}, {R-Tag sequence}, Short-ID'." ValidationOptions="None"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>
        </Grid>
        <TextBox x:Name="outputTextBox" Margin="10,10,10,10" Grid.Row="3" TextWrapping="Wrap" Text="{Binding OutputText, Mode=TwoWay}" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" IsReadOnly="True" Background="{DynamicResource ReadOnlyBackground}" TextChanged="outputTextBox_TextChanged" Foreground="{DynamicResource ReadOnlyForeground}"/>


    </Grid>
</Window>
