
Example Forward Read Sequence:
ZZZZZZZZXXXXXXXXXXCATCGGTGAGCCCGGGCTGTCGGCGTNNTNNNANNTNNNANNTNNNANNTNNNANNTNNNANNATATGCCAGCAGGCCGGCCACGCTNNTNNNANNTNNNANNANNNANNTNNNANNTNNNANNCGGTGGCCCGGGCGGCCGCACGATGCGTCCGGCGTAGAGGXXXXXXXXXXZZZZZZZZ


Underline readLength

use regex to find/highlight UMI tags and multitags

clear selection after analysis

Sample IDs: Dictionary with string[2] key: key[0] if forward multitag, key[1] is reverse multitag
	value/ID = "unexpected" if not in Dictionary (will happen in parser)

highlight UMI tag (yellow)

highlight multitag (green)

highlight lintag (thistle)

add non-editable spacer length textboxes and properties

highlight constant flanking reagion after multitag (PowderBlue)

highlight constant flanking regions to lintag (PowderBlue)

write the flanking sequences to the appropriate variables for use by the parser

Auto-generate Regex, but also allow manual edits

Create list of parameters properties to be saved to XML file

Implement File menu items
	Save/Read editable text boxes to/from XML
	In Save() and SaveAs(), implement save parameters to XML file
	In LoadParams() and LoadParams(string file), implement read setting from XML file

Add Read seqeunces to parameters saved/loaded to/from XML parameters file

Set input and output directories and input fastq files 

Match colors for input text boxes to related highlighted regions
	
Convert "OutputText +=" to AddOutputText()

Set number of parsing threads to 1/2 the number of logical processors

static double min_qs = 30;

In OnPropertyChanged(string name), check if name is on list of parameters properties to be saved to XML file

Make Sequence RichTextBoxes constant height in layout

move utility methods to Parser.cs as static methods	
Move RegExStrWithOneSnip() to Parser.cs as static method
Move RemoveStringWhitespace() to Parser.cs as static method
Move ReverseComplement() to Parser.cs as static method

Add Hamming and Levenshtein distance as static methods to Parser.cs

Add multiplex tags analysis tools
	Near neighbors, using Hamming and Levenshtein Distances
	Substrings

When making forward and reverse multi-tag lists, avoid adding duplicates from extra multi-tag list

Implement Interface for Parser class to send info/text back to Main Window for display, IDisplaysOutputText

Run parser in background thread

Disable GUI controls during parsing

Add controls: Spacer insertion and deletion rate controls

Auto RegEx: replace repeated '.' with '{n, m}?'

Change forward and reverse spacer lengths to range (array with min, nominal, max lengths)

Change lin-tag lengths to range (array with min, nominal, max lengths), autoRegexButton_Click() method
	Add AnalyzeSequences() at beginning of autoRegexButton_Click() method 

Add number of parsing threads to log file output

in Parser: use counter to display progress

Change ignoreN to Nweight enumeration: Ignore:ingoreN, Full:N=mismatch, Half:N=0.5*mismatch

Add multi-tag error rate and ignoreN controls/properties

Add extra multi-tags to parser

set up log file; in AddOutputText()

If output file label or directory is changed, switch to SaveAs

Fix bug in Parse Then Cluster: doesn't assign input files for clustering properly.

Automatically run AnalyzeMultiTags before parsing

Add option to accept zero or one mismatches in each flanking sequence region

Figure out what's going on with N's
	Make short test dataset that I can edit by hand

Add SampleSorter to sort barcode cluster counts into samples

Fix bug in Sorter lines 199-200: forBarcodeDict, and revBarcodeDict - if keys don't exist because cutoff frquency set >1

Remove Clustering Output Directory Control (make same as Top-level Output Directory)


--------------------------------------------------------
NISTBartender TODO List:

Add cluster merge for different length clusters (after main Bartender Clustering step)

Add flag for possible Chimeras in Sorter

Multiple input files (from different runs/lanes, etc.)



Add warning during AnalyzeMultiTags() if Hamming distance is <= allowed mismatch number from multiTagErrorRate

display histogram of lin-tag lengths after parsing

calculate/show bit rate for UMI tags and lin-tags


add regex to output text

Add check that Read Sequence text contains only allowed characters (after ToUpper())
	ATCGXZN


All samples/multitags to be parsed into one file and clustered together

replace Z statistic with probability ratio or log-ratio of Poisson probabilities for same cluster vs. different clusters

Try full entropy to rank seed positions


