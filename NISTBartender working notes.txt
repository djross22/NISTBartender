
Example Forward Read Sequence:
ZZZZZZZZXXXXXXXXXXCATCGGTGAGCCCGGGCTGTCGGCGTNNTNNNANNTNNNANNTNNNANNTNNNANNTNNNANNATATGCCAGCAGGCCGGCCACGCTNNTNNNANNTNNNANNANNNANNTNNNANNTNNNANNCGGTGGCCCGGGCGGCCGCACGATGCGTCCGGCGTAGAGGXXXXXXXXXXZZZZZZZZ


Underline readLength

use regex to find/highlight UMI tags and multitags

clear selection after analysis

Sample IDs: Dictionary with string[2] key: key[0] if forward multitag, key[1] is reverse multitag
	value/ID = "unexpected" if not in Dictionary (will happen in parser)

highlight UMI tag (yellow)

highlight multitag (green)

highlight lintag (thistle)

add non-editable spacer length textboxes and properties

highlight constant flanking reagion after multitag (PowderBlue)

highlight constant flanking regions to lintag (PowderBlue)

write the flanking sequences to the appropriate variables for use by the parser

Auto-generate Regex, but also allow manual edits

Create list of parameters properties to be saved to XML file

Implement File menu items
	Save/Read editable text boxes to/from XML
	In Save() and SaveAs(), implement save parameters to XML file
	In LoadParams() and LoadParams(string file), implement read setting from XML file

Add Read seqeunces to parameters saved/loaded to/from XML parameters file

Set input and output directories and input fastq files 

Match colors for input text boxes to related highlighted regions
	
Convert "OutputText +=" to AddOutputText()

Set number of parsing threads to 1/2 the number of logical processors

static double min_qs = 30;

In OnPropertyChanged(string name), check if name is on list of parameters properties to be saved to XML file

Make Sequence RichTextBoxes constant height in layout


--------------------------------------------------------
NISTBartender TODO List:


Add parser (as dll?)

Add multiplex tags analysis tools
	Near neighbors, within 1 or 2 Hamming Distance
	Substrings


set up log file; in AddOutputText()


All samples/multitags to be parsed into one file and clustered together

replace Z statistic with probability ratio or log-ratio of Poisson probabilities for same cluster vs. different clusters

Try full entropy to rank seed positions


